#!/usr/bin/env bash

# Update from external every 60 seconds
window_duration=60
weather_cache=/tmp/weather-cache

# 
# Load the cache json file
#
function load_cache() {
  cat "$weather_cache"
}

#
# Serialize current timestamp, temperature and description to json and then write them to the cache
#
function save_cache() {
  now=$(date +%s)
  temp=${1:?}
  desc=${2:?}
  inter="{}"
  inter=$(echo "$inter" | jq 'setpath(["last"]; '"$now"')')
  inter=$(echo "$inter" | jq 'setpath(["temp"]; "'"$temp"'")')
  final=$(echo "$inter" | jq 'setpath(["desc"]; "'"$desc"'")')
  echo "$final" > "$weather_cache"
}

#
# Make a request to get external IPs configuration (obviously this will modify your weather data if you're using a VPN!)
#
function get_city() {
  ip_json=$(curl -s ifconfig.co/json)
  jq -r .city <<< "$ip_json"
}

#
# Get current weather info from wttr.in (https://github.com/chubin/wttr.in)
#
function get_weather() {
  city=${1:?}
  weather_data=$(curl -s wttr.in/${city}?format=j1 | jq -r .current_condition[])
  temp=$(jq -r .temp_F <<< "$weather_data")
  desc=$(jq -r .weatherDesc[].value <<< "$weather_data" | tr '[:upper:]' '[:lower:]')
  inter=$(echo "{}" | jq 'setpath(["temp"]; "'"$temp"'")')
  final=$(echo "$inter" | jq 'setpath(["desc"]; "'"$desc"'")')
  echo "$final"
}

#
# Check to see if the window_duration has elapsed
#
function window_elapsed() {
  cache=$(load_cache)
  last=$(jq -r .last <<< "$cache")
  now=$(date +%s)
  elapsed=$(echo "$now - $last" | bc)
  if [ "$elapsed" -gt "$window_duration" ]; then
    return
  else
    false
  fi
}

#
# If the cache doesn't exist or the window duration has elapsed, create/update the cache
#
if [ ! -e "$weather_cache" ] || window_elapsed; then
  city=$(get_city)
  # This should account for drop in network connection as well
  if [[ "$city" != "null" ]] && [[ "$city" != "" ]]; then
    weather=$(get_weather "$city")
    temp=$(jq -r .temp <<< "$weather")
    desc=$(jq -r .desc <<< "$weather")
    save_cache "$temp" "$desc"
  fi
fi

cache=$(load_cache)
temp=$(jq -r .temp <<< "$cache")
desc=$(jq -r .desc <<< "$cache")

#
# It's only rainy or cloudy in Seattle 
#
case "$desc" in
  "light rain")        icon cloud-rain;;
  "partly cloudy")     icon cloud-sun;;
  *) echo -n "<>"
esac

echo "$temp"
